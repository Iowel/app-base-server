{{template "base" .}}

{{define "title"}}
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ Email
{{end}}

{{define "content"}}
  <div class="container mt-5">
    <div class="text-center">
      <div id="spinner" class="spinner-border text-primary" role="status">
        <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
      </div>
      <h1 id="message" class="mt-4"></h1>
      <a id="go-to-register" href="/login" class="btn btn-success mt-3 d-none">–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞</a>
    </div>
  </div>
{{end}}

{{define "js"}}
  <script>
    const params = new URLSearchParams(window.location.search);
    const emailId = params.get("email_id");
    const secretCode = params.get("secret_code");

    const messageEl = document.getElementById("message");
    const spinnerEl = document.getElementById("spinner");
    const registerBtn = document.getElementById("go-to-register");

    if (!emailId || !secretCode) {
      spinnerEl.classList.add("d-none");
      messageEl.innerText = "üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞!";
      messageEl.classList.add("text-danger");
    } else {
      fetch(`{{.AUTHSERVICEAPI}}/v1/verify_email?email_id=${emailId}&secret_code=${secretCode}`)
        .then(res => {
          if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞");
          return res.json();
        })
        .then(data => {
          spinnerEl.classList.add("d-none");
          if (data.is_verified) {
            messageEl.innerText = "‚úÖ Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!";
            messageEl.classList.add("text-success");
            registerBtn.classList.remove("d-none");
          } else {
            messageEl.innerText = "‚ùå Email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.";
            messageEl.classList.add("text-danger");
          }
        })
        .catch(() => {
          spinnerEl.classList.add("d-none");
          messageEl.innerText = "üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏.";
          messageEl.classList.add("text-danger");
        });
    }
  </script>
{{end}}
